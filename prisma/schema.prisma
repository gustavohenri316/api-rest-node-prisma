generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                  String                @id @default(uuid())
  email               String                @unique
  username            String                @unique
  password            String
  created_at          DateTime              @default(now())
  updated_at          DateTime              @updatedAt
  role                Role?                 @relation(fields: [roleId], references: [id])
  roleId              String?
  Profile             Profile?              @relation(fields: [profileId], references: [id])
  profileId           String?
  Idea                Idea[]
  ideaId              String?
  Comments            Comments[]
  LikesComments       LikesComments[]
  DidNotLikesComments DidNotLikesComments[]

  @@map("users")
}

model Role {
  id          String        @id @default(uuid())
  title       String        @unique
  description String
  User        User[]
  permissions Permissions[]

  @@map("role")
}

model Permissions {
  id          String @id @default(uuid())
  title       String @unique
  description String
  roles       Role[]

  @@map("permissions")
}

model Genders {
  id       String    @id @default(uuid())
  name     String?
  profiles Profile[]

  @@map("genders")
}

model Profile {
  id           String   @id @default(uuid())
  full_name    String?
  avatar_url   String?
  phone        String?
  genders      Genders? @relation(fields: [gendersId], references: [id])
  gendersId    String?
  state        String?
  city         String?
  neighborhood String?
  street       String?
  number       String?
  complement   String?
  birthDate    String?
  cep          String?
  User         User[]

  @@map("profiles")
}

model Idea {
  id           String      @id @default(uuid())
  likes        Int
  thumbnail    String
  photo        IdeaPhoto[]
  title        String
  description  String
  summary      String
  price        Int
  internship   Internship  @relation(fields: [internshipId], references: [id])
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  comments     Comments[]
  userId       String?
  User         User?       @relation(fields: [userId], references: [id])
  internshipId String

  @@map("idea")
}

model Internship {
  id          String @id @default(uuid())
  description String
  title       String
  Idea        Idea[]
}

model IdeaPhoto {
  id     String  @id @default(uuid())
  photos String?
  Idea   Idea?   @relation(fields: [ideaId], references: [id])
  ideaId String?

  @@map("idea_photo")
}

model Comments {
  id                    String                @id @default(uuid())
  description           String
  user                  User                  @relation(fields: [userId], references: [id])
  created_at            DateTime              @default(now())
  updated_at            DateTime              @updatedAt
  likes                 LikesComments[]
  did_not_like          DidNotLikesComments[]
  answers               Answers[]
  Idea                  Idea?                 @relation(fields: [ideaId], references: [id])
  ideaId                String
  userId                String
  likesCommentsId       String?
  DidNotLikesCommentsId String?

  @@map("comments")
}

model LikesComments {
  id         String    @id @default(uuid())
  user       User      @relation(fields: [userId], references: [id])
  userId     String
  Comments   Comments? @relation(fields: [commentsId], references: [id])
  commentsId String?

  @@map("likes_comments")
}

model DidNotLikesComments {
  id         String    @id @default(uuid())
  Comments   Comments? @relation(fields: [commentsId], references: [id])
  commentsId String?
  user       User      @relation(fields: [userId], references: [id])
  userId     String

  @@map("did_not_like_comments")
}

model Answers {
  id         String    @id @default(uuid())
  message    String
  Comments   Comments? @relation(fields: [commentsId], references: [id])
  commentsId String?

  @@map("answers")
}
